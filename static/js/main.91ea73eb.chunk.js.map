{"version":3,"sources":["Components/Keypad.js","Components/InputScreen.js","Components/OutputScreen.js","Components/Display.js","Components/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["Keypad","Button","className","id","onClick","this","props","clear","value","del","operation","equals","React","Component","InputScreen","screen","OutputScreen","total","operator","Display","Calculator","state","current","previous","keyPress","bind","delete","compute","event","sum","target","display","includes","setState","slice","result","previousNumber","parseFloat","currentNumber","isNaN","op","undefined","Container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91ea73eb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n\r\n\r\nclass Keypad extends React.Component {\r\n  render() {    \r\n\r\n    return (\r\n        <>\r\n\r\n        <Button className='btn-danger border' id='ce' onClick={this.props.clear} value=\"ce\">CE</Button>\r\n        <Button className='btn-danger border' onClick={this.props.del} value=\"DEL\">DEL</Button>\r\n        <Button className='border' onClick={this.props.operation} value=\"/\">/</Button>\r\n        <Button className='border' onClick={this.props.onClick} value=\"7\">7</Button>\r\n        <Button className='border' onClick={this.props.onClick} value=\"8\">8</Button>\r\n        <Button className='border' onClick={this.props.onClick} value=\"9\">9</Button>\r\n        <Button className='border' onClick={this.props.operation} value=\"*\">X</Button>\r\n        <Button className='border' onClick={this.props.onClick} value=\"4\">4</Button>\r\n        <Button className='border' onClick={this.props.onClick} value=\"5\">5</Button>\r\n        <Button className='border' onClick={this.props.onClick} value=\"6\">6</Button>\r\n        <Button className='border' onClick={this.props.operation} value=\"-\">-</Button>\r\n        <Button className='border' onClick={this.props.onClick} value=\"1\">1</Button>\r\n        <Button className='border' onClick={this.props.onClick} value=\"2\">2</Button>\r\n        <Button className='border' onClick={this.props.onClick} value=\"3\">3</Button>\r\n        <Button className='border' onClick={this.props.operation} value=\"+\">+</Button> \r\n        <Button className='border' onClick={this.props.onClick} value=\".\">.</Button>\r\n        <Button className='border' onClick={this.props.onClick} value=\"0\">0</Button>\r\n        <Button className='btn-success border' id='equals' onClick={this.props.equals}  value=\"=\">=</Button>  \r\n        \r\n \r\n        </>\r\n    );\r\n  }\r\n}\r\nexport default Keypad;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nclass InputScreen extends React.Component {\r\n  render() {\r\n    return (\r\n        <>\r\n        <h2>{this.props.screen}</h2>\r\n        </>\r\n\r\n\r\n    );\r\n  }\r\n}\r\nexport default InputScreen;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nclass OutputScreen extends React.Component {\r\n  render() {\r\n    return (\r\n        <>\r\n        <p>{this.props.total}{this.props.operator}</p>\r\n        </>\r\n\r\n\r\n    );\r\n  }\r\n}\r\nexport default OutputScreen;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport InputScreen from './InputScreen'\r\nimport OutputScreen from \"./OutputScreen\";\r\n\r\n\r\nclass Display extends React.Component {\r\n  render() {\r\n    return (\r\n        <>\r\n        <div className= 'border' id='screen'>\r\n        <OutputScreen total={this.props.total} />\r\n        <InputScreen operator={this.props.operator} screen={this.props.screen}/>\r\n        </div>\r\n        \r\n        </>\r\n\r\n\r\n    );\r\n  }\r\n}\r\nexport default Display;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Keypad from \"./Keypad\";\r\nimport Display from \"./Display\";\r\n\r\nclass Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: \"\",\r\n      previous: \"\",\r\n      operation: \"\",\r\n    };\r\n    this.keyPress = this.keyPress.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n    this.clear = this.clear.bind(this);\r\n    this.operation = this.operation.bind(this);\r\n    this.compute = this.compute.bind(this);\r\n    this.equals = this.equals.bind(this);\r\n  }\r\n\r\n  keyPress(event) {\r\n    const sum = event.target.value;\r\n    let display = this.state.current;\r\n\r\n    if (sum === \".\" && this.state.current.includes(\".\")) return;\r\n\r\n    this.setState({\r\n      current: display + sum,\r\n    });\r\n  }\r\n\r\n  delete() {\r\n    let display = this.state.current;\r\n\r\n    this.setState({\r\n      current: display.slice(0, -1),\r\n    });\r\n  }\r\n\r\n  clear() {\r\n    this.setState({\r\n      current: \"\",\r\n      previous: \"\",\r\n      operation: \"\",\r\n    });\r\n  }\r\n\r\n  compute() {\r\n    let result;\r\n    let previousNumber = parseFloat(this.state.previous);\r\n    let currentNumber = parseFloat(this.state.current);\r\n\r\n    if (isNaN(previousNumber) || isNaN(currentNumber)) return;\r\n\r\n    switch (this.state.operation) {\r\n      case \"/\":\r\n        result = previousNumber / currentNumber;\r\n        break;\r\n      case \"+\":\r\n        result = previousNumber + currentNumber;\r\n        break;\r\n      case \"*\":\r\n        result = previousNumber * currentNumber;\r\n        break;\r\n      case \"-\":\r\n        result = previousNumber - currentNumber;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  operation(op) {\r\n    let operator = op.target.value;\r\n    if (this.state.current === \"\") return;\r\n    if (this.state.previous !== \"\") {\r\n      let value = this.compute();\r\n      this.setState({\r\n        previous: value + operator,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        previous: this.state.current + operator,\r\n      });\r\n    }\r\n    this.setState({\r\n      current: \"\",\r\n      operation: op.target.value,\r\n    });\r\n  }\r\n\r\n  equals() {\r\n    let value = this.compute();\r\n    if (value === undefined || value == null) return;\r\n\r\n    this.setState({\r\n      current: value,\r\n      previous: \"\",\r\n      operation: \"\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div id='app'>\r\n\r\n      <Container id='calculator'>\r\n        <Display\r\n          operator={this.state.operation}\r\n          total={this.state.previous}\r\n          screen={this.state.current}\r\n          />\r\n        <Keypad id='keypad'\r\n          equals={this.equals}\r\n          operation={this.operation}\r\n          clear={this.clear}\r\n          del={this.delete}\r\n          onClick={this.keyPress}\r\n          />\r\n      </Container>\r\n          </div>\r\n    );\r\n  }\r\n}\r\nexport default Calculator;\r\n","import Calculator from \"./Components/Calculator\";\nimport './App.scss';\n\n\nfunction App() {\n  return(\n    <>\n    <Calculator />\n    </>\n  ) \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}